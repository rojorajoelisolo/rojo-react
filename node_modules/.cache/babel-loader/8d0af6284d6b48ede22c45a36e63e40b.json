{"ast":null,"code":"import React from\"react\";import{makeStyles}from\"@material-ui/core/styles\";import Table from\"@material-ui/core/Table\";import TableBody from\"@material-ui/core/TableBody\";import TableCell from\"@material-ui/core/TableCell\";import TableContainer from\"@material-ui/core/TableContainer\";import TableHead from\"@material-ui/core/TableHead\";import TableRow from\"@material-ui/core/TableRow\";import Paper from\"@material-ui/core/Paper\";var useStyles=makeStyles({table:{minWidth:650}});function createData(name,calories,fat,carbs,protein){return{name:name,calories:calories,fat:fat,carbs:carbs,protein:protein};}var rows=[createData(\"Frozen yoghurt\",159,6.0,24,4.0),createData(\"Ice cream sandwich\",237,9.0,37,4.3),createData(\"Eclair\",262,16.0,24,6.0),createData(\"Cupcake\",305,3.7,67,4.3),createData(\"Gingerbread\",356,16.0,49,3.9)];export default function TestMaterialUI(){var classes=useStyles();return React.createElement(TableContainer,{component:Paper},React.createElement(Table,{className:classes.table,\"aria-label\":\"simple table\"},React.createElement(TableHead,null,React.createElement(TableRow,null,React.createElement(TableCell,null,\"Dessert (100g serving)\"),React.createElement(TableCell,{align:\"right\"},\"Calories\"),React.createElement(TableCell,{align:\"right\"},\"Fat\\xA0(g)\"),React.createElement(TableCell,{align:\"right\"},\"Carbs\\xA0(g)\"),React.createElement(TableCell,{align:\"right\"},\"Protein\\xA0(g)\"))),React.createElement(TableBody,null,rows.map(function(row){return React.createElement(TableRow,{key:row.name},React.createElement(TableCell,{component:\"th\",scope:\"row\"},row.name),React.createElement(TableCell,{align:\"right\"},row.calories),React.createElement(TableCell,{align:\"right\"},row.fat),React.createElement(TableCell,{align:\"right\"},row.carbs),React.createElement(TableCell,{align:\"right\"},row.protein));}))));}","map":{"version":3,"sources":["C:/Boss/Buffa/rockstar/src/components/TestMaterialUI.js"],"names":["React","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","useStyles","table","minWidth","createData","name","calories","fat","carbs","protein","rows","TestMaterialUI","classes","map","row"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,KAA2B,0BAA3B,CACA,MAAOC,CAAAA,KAAP,KAAkB,yBAAlB,CACA,MAAOC,CAAAA,SAAP,KAAsB,6BAAtB,CACA,MAAOC,CAAAA,SAAP,KAAsB,6BAAtB,CACA,MAAOC,CAAAA,cAAP,KAA2B,kCAA3B,CACA,MAAOC,CAAAA,SAAP,KAAsB,6BAAtB,CACA,MAAOC,CAAAA,QAAP,KAAqB,4BAArB,CACA,MAAOC,CAAAA,KAAP,KAAkB,yBAAlB,CAEA,GAAMC,CAAAA,SAAS,CAAGR,UAAU,CAAC,CAC3BS,KAAK,CAAE,CACLC,QAAQ,CAAE,GADL,CADoB,CAAD,CAA5B,CAMA,QAASC,CAAAA,UAAT,CAAoBC,IAApB,CAA0BC,QAA1B,CAAoCC,GAApC,CAAyCC,KAAzC,CAAgDC,OAAhD,CAAyD,CACvD,MAAO,CAAEJ,IAAI,CAAJA,IAAF,CAAQC,QAAQ,CAARA,QAAR,CAAkBC,GAAG,CAAHA,GAAlB,CAAuBC,KAAK,CAALA,KAAvB,CAA8BC,OAAO,CAAPA,OAA9B,CAAP,CACD,CAED,GAAMC,CAAAA,IAAI,CAAG,CACXN,UAAU,CAAC,gBAAD,CAAmB,GAAnB,CAAwB,GAAxB,CAA6B,EAA7B,CAAiC,GAAjC,CADC,CAEXA,UAAU,CAAC,oBAAD,CAAuB,GAAvB,CAA4B,GAA5B,CAAiC,EAAjC,CAAqC,GAArC,CAFC,CAGXA,UAAU,CAAC,QAAD,CAAW,GAAX,CAAgB,IAAhB,CAAsB,EAAtB,CAA0B,GAA1B,CAHC,CAIXA,UAAU,CAAC,SAAD,CAAY,GAAZ,CAAiB,GAAjB,CAAsB,EAAtB,CAA0B,GAA1B,CAJC,CAKXA,UAAU,CAAC,aAAD,CAAgB,GAAhB,CAAqB,IAArB,CAA2B,EAA3B,CAA+B,GAA/B,CALC,CAAb,CAQA,cAAe,SAASO,CAAAA,cAAT,EAA0B,CACvC,GAAMC,CAAAA,OAAO,CAAGX,SAAS,EAAzB,CAEA,MACE,qBAAC,cAAD,EAAgB,SAAS,CAAED,KAA3B,EACE,oBAAC,KAAD,EAAO,SAAS,CAAEY,OAAO,CAACV,KAA1B,CAAiC,aAAW,cAA5C,EACE,oBAAC,SAAD,MACE,oBAAC,QAAD,MACE,oBAAC,SAAD,+BADF,CAEE,oBAAC,SAAD,EAAW,KAAK,CAAC,OAAjB,aAFF,CAGE,oBAAC,SAAD,EAAW,KAAK,CAAC,OAAjB,eAHF,CAIE,oBAAC,SAAD,EAAW,KAAK,CAAC,OAAjB,iBAJF,CAKE,oBAAC,SAAD,EAAW,KAAK,CAAC,OAAjB,mBALF,CADF,CADF,CAUE,oBAAC,SAAD,MACGQ,IAAI,CAACG,GAAL,CAAS,SAAAC,GAAG,QACX,qBAAC,QAAD,EAAU,GAAG,CAAEA,GAAG,CAACT,IAAnB,EACE,oBAAC,SAAD,EAAW,SAAS,CAAC,IAArB,CAA0B,KAAK,CAAC,KAAhC,EACGS,GAAG,CAACT,IADP,CADF,CAIE,oBAAC,SAAD,EAAW,KAAK,CAAC,OAAjB,EAA0BS,GAAG,CAACR,QAA9B,CAJF,CAKE,oBAAC,SAAD,EAAW,KAAK,CAAC,OAAjB,EAA0BQ,GAAG,CAACP,GAA9B,CALF,CAME,oBAAC,SAAD,EAAW,KAAK,CAAC,OAAjB,EAA0BO,GAAG,CAACN,KAA9B,CANF,CAOE,oBAAC,SAAD,EAAW,KAAK,CAAC,OAAjB,EAA0BM,GAAG,CAACL,OAA9B,CAPF,CADW,EAAZ,CADH,CAVF,CADF,CADF,CA4BD","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650\n  }\n});\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n  createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0),\n  createData(\"Ice cream sandwich\", 237, 9.0, 37, 4.3),\n  createData(\"Eclair\", 262, 16.0, 24, 6.0),\n  createData(\"Cupcake\", 305, 3.7, 67, 4.3),\n  createData(\"Gingerbread\", 356, 16.0, 49, 3.9)\n];\n\nexport default function TestMaterialUI() {\n  const classes = useStyles();\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Dessert (100g serving)</TableCell>\n            <TableCell align=\"right\">Calories</TableCell>\n            <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\n            <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\n            <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map(row => (\n            <TableRow key={row.name}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.name}\n              </TableCell>\n              <TableCell align=\"right\">{row.calories}</TableCell>\n              <TableCell align=\"right\">{row.fat}</TableCell>\n              <TableCell align=\"right\">{row.carbs}</TableCell>\n              <TableCell align=\"right\">{row.protein}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}